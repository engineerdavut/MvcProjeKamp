@model EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "AddWriter";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h1>Yeni Yazar Ekleme</h1>
<br />
@using (Html.BeginForm("AddWriter", "Writer", FormMethod.Post)) {
<div class="form-group">
    @Html.Label("Yazar Adı")
    @Html.TextBoxFor(x => x.WriterFirstName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterFirstName)
    <br />


    @Html.Label("Yazar SoyAdı")
    @Html.TextBoxFor(x => x.WriterLastName, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterLastName)
    <br />


    @Html.Label("Yazar Email")
    @Html.TextBoxFor(x => x.WriterEmail, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterEmail)
    <br />

    @Html.Label("Yazar Sifre")
    @Html.TextBoxFor(x => x.WriterPassword, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterPassword)
    <br />

    @Html.Label("Yazar Resim")
    @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterImage)
    <br />
    @Html.Label("Yazar Unvan")
    @Html.TextBoxFor(x => x.WriterTitle, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterTitle)
    <br />

    @Html.Label("Yazar Hakkında")
    @Html.TextBoxFor(x => x.WriterAbout, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.WriterAbout)
    <br />
    <button class="btn btn-info">
        Yazarı Ekle
    </button>
</div>
}

